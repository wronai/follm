# ========================================
# Build stage
# ========================================
FROM node:18-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy package files first for better layer caching
COPY package*.json ./
COPY .npmrc* ./

# Install all dependencies (including devDependencies) for building
RUN npm ci --include=dev

# Copy source code
COPY . .

# Build the application (if needed)
# RUN npm run build

# ========================================
# Production stage
# ========================================
FROM node:18-slim

# Install runtime dependencies for Playwright and system tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Basic dependencies
    ca-certificates \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libatspi2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libgtk-4-1 \
    libnspr4 \
    libnss3 \
    libx11-6 \
    libxcb1 \
    libxcomposite1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxkbcommon0 \
    libxrandr2 \
    libxshmfence1 \
    # Additional dependencies for Playwright
    libasound2 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libatomic1 \
    libcairo2 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libegl1 \
    libenchant-2-2 \
    libepoxy0 \
    libevdev2 \
    libevent-2.1-7 \
    libflite1 \
    libgbm1 \
    libgles2 \
    libglib2.0-0 \
    libglx0 \
    libgstreamer-gl1.0-0 \
    libgstreamer-plugins-bad1.0-0 \
    libgstreamer-plugins-base1.0-0 \
    libgstreamer1.0-0 \
    libgtk-3-0 \
    libgtk-4-1 \
    libharfbuzz-icu0 \
    libhyphen0 \
    libicu67 \
    libjpeg62-turbo \
    liblcms2-2 \
    libmanette-0.2-0 \
    libnotify4 \
    libnspr4 \
    libnss3 \
    libopenjp2-7 \
    libopengl0 \
    libopus0 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libpng16-16 \
    libsecret-1-0 \
    libvpx6 \
    libwayland-client0 \
    libwayland-egl1 \
    libwayland-server0 \
    libwebp6 \
    libwebpdemux2 \
    libwoff1 \
    libx11-6 \
    libx11-xcb1 \
    libxcb-dri3-0 \
    libxcb-shm0 \
    libxcomposite1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxkbcommon0 \
    libxml2 \
    libxslt1.1 \
    libxss1 \
    libxtst6 \
    xvfb \
    # Additional tools
    procps \
    # Clean up
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /var/cache/apt/archives/* \
    # Create required directories
    && mkdir -p /usr/share/man/man1/ \
    # Install additional dependencies
    && apt-get update && apt-get install -y --no-install-recommends \
       libgstreamer-plugins-bad1.0-0 \
       libgstreamer-plugins-base1.0-0 \
       libgstreamer1.0-0 \
       libgstreamer1.0-dev \
       libgstreamer1.0-x \
       libgstreamer1.0-gl \
       libgstreamer1.0-gtk-3-0 \
       libgstreamer1.0-libav \
       libgstreamer1.0-plugins-bad \
       libgstreamer1.0-plugins-base \
       libgstreamer1.0-plugins-good \
       libgstreamer1.0-plugins-ugly \
       libgstreamer-plugins-base1.0-dev \
       libgstreamer-plugins-good1.0-0 \
       libgstreamer-plugins-bad1.0-0 \
       libgstreamer-plugins-ugly1.0-0 \
       libatomic1 \
       libxslt1.1 \
       libevent-2.1-7 \
       libopus0 \
       libwebpdemux2 \
       libharfbuzz-icu0 \
       libenchant-2-2 \
       libsecret-1-0 \
       libhyphen0 \
       libmanette-0.2-0 \
       libnghttp2-14 \
       libgl1-mesa-glx \
       libx264-155 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /var/cache/apt/archives/*

# Create app directory and set permissions
RUN mkdir -p /app/uploads \
    && chown -R node:node /app

WORKDIR /app

# Copy built assets and dependencies from builder
COPY --from=builder --chown=node:node /app/node_modules ./node_modules
COPY --from=builder --chown=node:node /app/package*.json ./
COPY --from=builder --chown=node:node /app/. .

# Install only production dependencies
RUN npm prune --production

# Install Playwright browsers
RUN npx playwright install --with-deps chromium

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3002
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright/

# Set non-root user
USER node

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD node -e "require('http').request('http://localhost:${PORT}/health', {timeout: 5000}, (res) => {if (res.statusCode === 200) process.exit(0); else process.exit(1);}).on('error', () => process.exit(1)).end()"

# Expose the application port
EXPOSE ${PORT}

# Start the application
CMD ["node", "app.js"]